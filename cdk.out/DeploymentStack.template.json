{
  "Parameters": {
    "ProjectName": {
      "Type": "String"
    },
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Resources": {
    "TASKROLEA2089027": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonS3FullAccess"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonECS_FullAccess"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "DeploymentStack/TASKROLE/Resource"
      }
    },
    "DBSECRETE6F61AC6": {
      "Type": "AWS::SecretsManager::Secret",
      "Properties": {
        "GenerateSecretString": {
          "ExcludePunctuation": true,
          "PasswordLength": 20
        },
        "Name": "dbPassword"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "DeploymentStack/DBSECRET/Resource"
      }
    },
    "VPCB9E5F0B4": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/24",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "DeploymentStack/VPC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "DeploymentStack/VPC/Resource"
      }
    },
    "VPCPublicSubnet1SubnetB4246D30": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/28",
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "DeploymentStack/VPC/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "DeploymentStack/VPC/PublicSubnet1/Subnet"
      }
    },
    "VPCPublicSubnet1RouteTableFEE4B781": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "DeploymentStack/VPC/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "DeploymentStack/VPC/PublicSubnet1/RouteTable"
      }
    },
    "VPCPublicSubnet1RouteTableAssociation0B0896DC": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781"
        },
        "SubnetId": {
          "Ref": "VPCPublicSubnet1SubnetB4246D30"
        }
      },
      "Metadata": {
        "aws:cdk:path": "DeploymentStack/VPC/PublicSubnet1/RouteTableAssociation"
      }
    },
    "VPCPublicSubnet1DefaultRoute91CEF279": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VPCIGWB7E252D3"
        }
      },
      "DependsOn": [
        "VPCVPCGW99B986DC"
      ],
      "Metadata": {
        "aws:cdk:path": "DeploymentStack/VPC/PublicSubnet1/DefaultRoute"
      }
    },
    "VPCPublicSubnet1EIP6AD938E8": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "DeploymentStack/VPC/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "DeploymentStack/VPC/PublicSubnet1/EIP"
      }
    },
    "VPCPublicSubnet1NATGatewayE0556630": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "SubnetId": {
          "Ref": "VPCPublicSubnet1SubnetB4246D30"
        },
        "AllocationId": {
          "Fn::GetAtt": [
            "VPCPublicSubnet1EIP6AD938E8",
            "AllocationId"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "DeploymentStack/VPC/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "DeploymentStack/VPC/PublicSubnet1/NATGateway"
      }
    },
    "VPCPublicSubnet2Subnet74179F39": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.16/28",
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "DeploymentStack/VPC/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "DeploymentStack/VPC/PublicSubnet2/Subnet"
      }
    },
    "VPCPublicSubnet2RouteTable6F1A15F1": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "DeploymentStack/VPC/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "DeploymentStack/VPC/PublicSubnet2/RouteTable"
      }
    },
    "VPCPublicSubnet2RouteTableAssociation5A808732": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1"
        },
        "SubnetId": {
          "Ref": "VPCPublicSubnet2Subnet74179F39"
        }
      },
      "Metadata": {
        "aws:cdk:path": "DeploymentStack/VPC/PublicSubnet2/RouteTableAssociation"
      }
    },
    "VPCPublicSubnet2DefaultRouteB7481BBA": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VPCIGWB7E252D3"
        }
      },
      "DependsOn": [
        "VPCVPCGW99B986DC"
      ],
      "Metadata": {
        "aws:cdk:path": "DeploymentStack/VPC/PublicSubnet2/DefaultRoute"
      }
    },
    "VPCPrivateSubnet1Subnet8BCA10E0": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.32/28",
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "DeploymentStack/VPC/PrivateSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "DeploymentStack/VPC/PrivateSubnet1/Subnet"
      }
    },
    "VPCPrivateSubnet1RouteTableBE8A6027": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "DeploymentStack/VPC/PrivateSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "DeploymentStack/VPC/PrivateSubnet1/RouteTable"
      }
    },
    "VPCPrivateSubnet1RouteTableAssociation347902D1": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027"
        },
        "SubnetId": {
          "Ref": "VPCPrivateSubnet1Subnet8BCA10E0"
        }
      },
      "Metadata": {
        "aws:cdk:path": "DeploymentStack/VPC/PrivateSubnet1/RouteTableAssociation"
      }
    },
    "VPCPrivateSubnet1DefaultRouteAE1D6490": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VPCPublicSubnet1NATGatewayE0556630"
        }
      },
      "Metadata": {
        "aws:cdk:path": "DeploymentStack/VPC/PrivateSubnet1/DefaultRoute"
      }
    },
    "VPCPrivateSubnet2SubnetCFCDAA7A": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.48/28",
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "DeploymentStack/VPC/PrivateSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "DeploymentStack/VPC/PrivateSubnet2/Subnet"
      }
    },
    "VPCPrivateSubnet2RouteTable0A19E10E": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "DeploymentStack/VPC/PrivateSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "DeploymentStack/VPC/PrivateSubnet2/RouteTable"
      }
    },
    "VPCPrivateSubnet2RouteTableAssociation0C73D413": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E"
        },
        "SubnetId": {
          "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A"
        }
      },
      "Metadata": {
        "aws:cdk:path": "DeploymentStack/VPC/PrivateSubnet2/RouteTableAssociation"
      }
    },
    "VPCPrivateSubnet2DefaultRouteF4F5CFD2": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VPCPublicSubnet1NATGatewayE0556630"
        }
      },
      "Metadata": {
        "aws:cdk:path": "DeploymentStack/VPC/PrivateSubnet2/DefaultRoute"
      }
    },
    "VPCDBSubnet1Subnet5E0CF118": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.64/28",
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "DB"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated"
          },
          {
            "Key": "Name",
            "Value": "DeploymentStack/VPC/DBSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "DeploymentStack/VPC/DBSubnet1/Subnet"
      }
    },
    "VPCDBSubnet1RouteTableD25F5A48": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "DeploymentStack/VPC/DBSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "DeploymentStack/VPC/DBSubnet1/RouteTable"
      }
    },
    "VPCDBSubnet1RouteTableAssociationDC8481F9": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCDBSubnet1RouteTableD25F5A48"
        },
        "SubnetId": {
          "Ref": "VPCDBSubnet1Subnet5E0CF118"
        }
      },
      "Metadata": {
        "aws:cdk:path": "DeploymentStack/VPC/DBSubnet1/RouteTableAssociation"
      }
    },
    "VPCDBSubnet2SubnetDABA49CF": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.80/28",
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "DB"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated"
          },
          {
            "Key": "Name",
            "Value": "DeploymentStack/VPC/DBSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "DeploymentStack/VPC/DBSubnet2/Subnet"
      }
    },
    "VPCDBSubnet2RouteTable51E969F8": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "DeploymentStack/VPC/DBSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "DeploymentStack/VPC/DBSubnet2/RouteTable"
      }
    },
    "VPCDBSubnet2RouteTableAssociationF6FBF57B": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCDBSubnet2RouteTable51E969F8"
        },
        "SubnetId": {
          "Ref": "VPCDBSubnet2SubnetDABA49CF"
        }
      },
      "Metadata": {
        "aws:cdk:path": "DeploymentStack/VPC/DBSubnet2/RouteTableAssociation"
      }
    },
    "VPCIGWB7E252D3": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "DeploymentStack/VPC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "DeploymentStack/VPC/IGW"
      }
    },
    "VPCVPCGW99B986DC": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "InternetGatewayId": {
          "Ref": "VPCIGWB7E252D3"
        }
      },
      "Metadata": {
        "aws:cdk:path": "DeploymentStack/VPC/VPCGW"
      }
    },
    "VPCS3Endpoint18C9C7CA": {
      "Type": "AWS::EC2::VPCEndpoint",
      "Properties": {
        "ServiceName": {
          "Fn::Join": [
            "",
            [
              "com.amazonaws.",
              {
                "Ref": "AWS::Region"
              },
              ".s3"
            ]
          ]
        },
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "RouteTableIds": [
          {
            "Ref": "VPCPrivateSubnet1RouteTableBE8A6027"
          },
          {
            "Ref": "VPCPrivateSubnet2RouteTable0A19E10E"
          },
          {
            "Ref": "VPCPublicSubnet1RouteTableFEE4B781"
          },
          {
            "Ref": "VPCPublicSubnet2RouteTable6F1A15F1"
          },
          {
            "Ref": "VPCDBSubnet1RouteTableD25F5A48"
          },
          {
            "Ref": "VPCDBSubnet2RouteTable51E969F8"
          }
        ],
        "VpcEndpointType": "Gateway"
      },
      "Metadata": {
        "aws:cdk:path": "DeploymentStack/VPC/S3Endpoint/Resource"
      }
    },
    "ARTIFACTBUCKET3AC4D6FF": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "ProjectName"
              },
              "-artifacts-",
              {
                "Ref": "AWS::AccountId"
              }
            ]
          ]
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "DeploymentStack/ARTIFACTBUCKET/Resource"
      }
    },
    "SGRDS8D02E925": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "DeploymentStack/SGRDS",
        "GroupName": "sg_rds",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "10.0.0.0/24",
            "Description": "from 10.0.0.0/24:3306",
            "FromPort": 3306,
            "IpProtocol": "tcp",
            "ToPort": 3306
          }
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        }
      },
      "Metadata": {
        "aws:cdk:path": "DeploymentStack/SGRDS/Resource"
      }
    },
    "MYSQLSubnetGroup5B5FBC17": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
        "DBSubnetGroupDescription": "Subnet group for MYSQL database",
        "SubnetIds": [
          {
            "Ref": "VPCDBSubnet1Subnet5E0CF118"
          },
          {
            "Ref": "VPCDBSubnet2SubnetDABA49CF"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "DeploymentStack/MYSQL/SubnetGroup/Default"
      }
    },
    "MYSQLDA998D0F": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "DBInstanceClass": "db.t2.small",
        "AllocatedStorage": "100",
        "CopyTagsToSnapshot": true,
        "DBName": "mlflowdb",
        "DBSubnetGroupName": {
          "Ref": "MYSQLSubnetGroup5B5FBC17"
        },
        "DeletionProtection": false,
        "Engine": "mysql",
        "EngineVersion": "8.0.26",
        "MasterUsername": "master",
        "MasterUserPassword": {
          "Fn::Join": [
            "",
            [
              "{{resolve:secretsmanager:",
              {
                "Ref": "DBSECRETE6F61AC6"
              },
              ":SecretString:::}}"
            ]
          ]
        },
        "Port": "3306",
        "PubliclyAccessible": false,
        "StorageType": "gp2",
        "VPCSecurityGroups": [
          {
            "Fn::GetAtt": [
              "SGRDS8D02E925",
              "GroupId"
            ]
          }
        ]
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "DeploymentStack/MYSQL/Resource"
      }
    },
    "CLUSTERCDDEBBE4": {
      "Type": "AWS::ECS::Cluster",
      "Properties": {
        "ClusterName": "mlflow"
      },
      "Metadata": {
        "aws:cdk:path": "DeploymentStack/CLUSTER/Resource"
      }
    },
    "MLflowDDA9BA68": {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties": {
        "ContainerDefinitions": [
          {
            "Environment": [
              {
                "Name": "BUCKET",
                "Value": {
                  "Fn::Join": [
                    "",
                    [
                      "s3://",
                      {
                        "Ref": "ARTIFACTBUCKET3AC4D6FF"
                      }
                    ]
                  ]
                }
              },
              {
                "Name": "HOST",
                "Value": {
                  "Fn::GetAtt": [
                    "MYSQLDA998D0F",
                    "Endpoint.Address"
                  ]
                }
              },
              {
                "Name": "PORT",
                "Value": "3306"
              },
              {
                "Name": "DATABASE",
                "Value": "mlflowdb"
              },
              {
                "Name": "USERNAME",
                "Value": "master"
              }
            ],
            "Essential": true,
            "Image": {
              "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:df0c2dd130fbc264a70d9331a9a4367b68d888ce0d1a851cc223b5f794dbc7f1"
            },
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "MLflowContainerLogGroupACBF29FF"
                },
                "awslogs-stream-prefix": "mlflow",
                "awslogs-region": {
                  "Ref": "AWS::Region"
                }
              }
            },
            "Name": "Container",
            "PortMappings": [
              {
                "ContainerPort": 5000,
                "HostPort": 5000,
                "Protocol": "tcp"
              }
            ],
            "Secrets": [
              {
                "Name": "PASSWORD",
                "ValueFrom": {
                  "Ref": "DBSECRETE6F61AC6"
                }
              }
            ]
          }
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "MLflowExecutionRoleB8ECF96D",
            "Arn"
          ]
        },
        "Family": "DeploymentStackMLflow75B51616",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE"
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "TASKROLEA2089027",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "DeploymentStack/MLflow/Resource"
      }
    },
    "MLflowContainerLogGroupACBF29FF": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "DeploymentStack/MLflow/Container/LogGroup/Resource"
      }
    },
    "MLflowExecutionRoleB8ECF96D": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "DeploymentStack/MLflow/ExecutionRole/Resource"
      }
    },
    "MLflowExecutionRoleDefaultPolicy23CB19EA": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":ecr:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":repository/",
                    {
                      "Fn::Sub": "cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}"
                    }
                  ]
                ]
              }
            },
            {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "MLflowContainerLogGroupACBF29FF",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret"
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "DBSECRETE6F61AC6"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "MLflowExecutionRoleDefaultPolicy23CB19EA",
        "Roles": [
          {
            "Ref": "MLflowExecutionRoleB8ECF96D"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "DeploymentStack/MLflow/ExecutionRole/DefaultPolicy/Resource"
      }
    },
    "MLFLOWLB7B85C32A": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "false"
          }
        ],
        "Scheme": "internet-facing",
        "Subnets": [
          {
            "Ref": "VPCPublicSubnet1SubnetB4246D30"
          },
          {
            "Ref": "VPCPublicSubnet2Subnet74179F39"
          }
        ],
        "Type": "network"
      },
      "DependsOn": [
        "VPCPublicSubnet1DefaultRoute91CEF279",
        "VPCPublicSubnet2DefaultRouteB7481BBA"
      ],
      "Metadata": {
        "aws:cdk:path": "DeploymentStack/MLFLOW/LB/Resource"
      }
    },
    "MLFLOWLBPublicListener92B8F85A": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "MLFLOWLBPublicListenerECSGroupFAEEFBE6"
            },
            "Type": "forward"
          }
        ],
        "LoadBalancerArn": {
          "Ref": "MLFLOWLB7B85C32A"
        },
        "Port": 80,
        "Protocol": "TCP"
      },
      "Metadata": {
        "aws:cdk:path": "DeploymentStack/MLFLOW/LB/PublicListener/Resource"
      }
    },
    "MLFLOWLBPublicListenerECSGroupFAEEFBE6": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "Port": 80,
        "Protocol": "TCP",
        "TargetType": "ip",
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        }
      },
      "Metadata": {
        "aws:cdk:path": "DeploymentStack/MLFLOW/LB/PublicListener/ECSGroup/Resource"
      }
    },
    "MLFLOWServiceFC39EF8E": {
      "Type": "AWS::ECS::Service",
      "Properties": {
        "Cluster": {
          "Ref": "CLUSTERCDDEBBE4"
        },
        "DeploymentConfiguration": {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50
        },
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LaunchType": "FARGATE",
        "LoadBalancers": [
          {
            "ContainerName": "Container",
            "ContainerPort": 5000,
            "TargetGroupArn": {
              "Ref": "MLFLOWLBPublicListenerECSGroupFAEEFBE6"
            }
          }
        ],
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "MLFLOWServiceSecurityGroup224B1FDD",
                  "GroupId"
                ]
              }
            ],
            "Subnets": [
              {
                "Ref": "VPCPrivateSubnet1Subnet8BCA10E0"
              },
              {
                "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A"
              }
            ]
          }
        },
        "ServiceName": "mlflow",
        "TaskDefinition": {
          "Ref": "MLflowDDA9BA68"
        }
      },
      "DependsOn": [
        "MLFLOWLBPublicListenerECSGroupFAEEFBE6",
        "MLFLOWLBPublicListener92B8F85A"
      ],
      "Metadata": {
        "aws:cdk:path": "DeploymentStack/MLFLOW/Service/Service"
      }
    },
    "MLFLOWServiceSecurityGroup224B1FDD": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "DeploymentStack/MLFLOW/Service/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "VPCB9E5F0B4",
                "CidrBlock"
              ]
            },
            "Description": "Allow inbound from VPC for mlflow",
            "FromPort": 5000,
            "IpProtocol": "tcp",
            "ToPort": 5000
          }
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        }
      },
      "Metadata": {
        "aws:cdk:path": "DeploymentStack/MLFLOW/Service/SecurityGroup/Resource"
      }
    },
    "MLFLOWServiceTaskCountTarget5798B92F": {
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
      "Properties": {
        "MaxCapacity": 2,
        "MinCapacity": 1,
        "ResourceId": {
          "Fn::Join": [
            "",
            [
              "service/",
              {
                "Ref": "CLUSTERCDDEBBE4"
              },
              "/",
              {
                "Fn::GetAtt": [
                  "MLFLOWServiceFC39EF8E",
                  "Name"
                ]
              }
            ]
          ]
        },
        "RoleARN": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":iam::",
              {
                "Ref": "AWS::AccountId"
              },
              ":role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService"
            ]
          ]
        },
        "ScalableDimension": "ecs:service:DesiredCount",
        "ServiceNamespace": "ecs"
      },
      "Metadata": {
        "aws:cdk:path": "DeploymentStack/MLFLOW/Service/TaskCount/Target/Resource"
      }
    },
    "MLFLOWServiceTaskCountTargetAUTOSCALINGE4A5776E": {
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
      "Properties": {
        "PolicyName": "DeploymentStackMLFLOWServiceTaskCountTargetAUTOSCALINGEEA650B6",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": {
          "Ref": "MLFLOWServiceTaskCountTarget5798B92F"
        },
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "ECSServiceAverageCPUUtilization"
          },
          "ScaleInCooldown": 60,
          "ScaleOutCooldown": 60,
          "TargetValue": 70
        }
      },
      "Metadata": {
        "aws:cdk:path": "DeploymentStack/MLFLOW/Service/TaskCount/Target/AUTOSCALING/Resource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/2VTXW/jIBD8LX0n3KmVTneP+WirSFXPsqO+RmtMXc42WLAkiiz/91vAdtL2iWF22GVn4Z7/5j/v4OxWompWrSr5UCCIhm3fdQYWOonSMoofBwUdH3LTyhCLa2ZaJS5RGtHInBRWoutAQy0t5Yr7oEhoZFLc8+GtF4F7y7Ys8yUdLXypJ92CcuNRHqBMBRN/5dbOGaEAldGLOIDHfRaWV8BnQHmGC8usOhG8Jt5r6onwLEg3mXZrpPY/OqmRTQxd9lFXvVEaJ+mypaa8VXh5tsb3U5dXgux44MPGiybVTWhktnJ82AFCCU7utUPQQrJ0vyXTbvONmKXBRMqwbb0Lw6HYDJ/A1hAMcs1OviutZnu+MkYjKC3tDTedLaQ9KZEsn2AhoA2WhyRb43Wcoj2CczRqvjPUld13NPB1YEKM57I3TqGxlw31yFpT04VfTL10M+PYy7EHDCNx/FXi2djmxUC1oaLUbPXlXrIFh0q0pCijQun6RE/q+0mb6tzsZ40is/QUn/EUO1C1G9NvtiODvqenGp8ceDSObKHi9MgXf4I4OveZScvB0r+iA0U6d/08n4hxZLl0xlvqNfpJ37GmaBD+9dj79DdmSRi+0VUc4ciyC34Y/eOB/+J/7v45pVaWxqU6yfO0/gdAllmx7wMAAA=="
      },
      "Metadata": {
        "aws:cdk:path": "DeploymentStack/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Outputs": {
    "MLFLOWLoadBalancerDNSAEFB7E43": {
      "Value": {
        "Fn::GetAtt": [
          "MLFLOWLB7B85C32A",
          "DNSName"
        ]
      }
    },
    "LoadBalancerDNS": {
      "Value": {
        "Fn::GetAtt": [
          "MLFLOWLB7B85C32A",
          "DNSName"
        ]
      }
    }
  },
  "Conditions": {
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "af-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}